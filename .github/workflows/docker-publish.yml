name: Docker Build and Publish

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'  # Example: v1.0.0
  schedule:
    - cron: '27 1 * * *'  # Schedule to run daily at 01:27 UTC
  pull_request:
    branches:
      - main

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20
        with:
          cosign-release: 'v2.2.4'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226

      - name: Log into Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set environment variables
        id: vars
        run: |
          echo "IMAGE_NAME=$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "FRONTEND_IMAGE=$IMAGE_NAME-frontend" >> $GITHUB_ENV
          echo "BACKEND_IMAGE=$IMAGE_NAME-backend" >> $GITHUB_ENV

      - name: Build and push frontend Docker image
        id: build-and-push-frontend
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.DOCKER_USERNAME }}/frontend-image:latest

      - name: Build and push backend Docker image
        id: build-and-push-backend
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.DOCKER_USERNAME }}/backend-image:latest

      - name: Sign the published frontend Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          IMAGE: ${{ secrets.DOCKER_USERNAME }}/frontend-image:latest
        run: cosign sign --yes ${IMAGE}

      - name: Sign the published backend Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          IMAGE: ${{ secrets.DOCKER_USERNAME }}/backend-image:latest
        run: cosign sign --yes ${IMAGE}

      - name: Test with docker-compose
        run: |
          docker-compose up -d
          # Add any commands to run your tests here
          docker-compose down

      - name: Create GitHub package
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body: |
            Release of version ${{ github.ref }}.

