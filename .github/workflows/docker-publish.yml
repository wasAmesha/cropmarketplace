name: Docker Build, Publish, and Package

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'  # Example: v1.0.0
  schedule:
    - cron: '27 1 * * *'  # Schedule to run daily at 01:27 UTC
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io  # Default to GitHub Container Registry
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06  # Use a specific release of cosign

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      - name: Log into Docker registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push frontend Docker image
      - name: Build and push frontend Docker image
        id: build-and-push-frontend
        uses: docker/build-push-action@v2
        with:
          context: ./frontend  # Path to frontend Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend:latest
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build and push backend Docker image
      - name: Build and push backend Docker image
        id: build-and-push-backend
        uses: docker/build-push-action@v2
        with:
          context: ./backend  # Path to backend Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/backend:latest
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Push frontend Docker image to GitHub Packages
      - name: Push frontend Docker image to GitHub Packages
        if: github.event_name != 'pull_request'
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push ghcr.io/${{ env.IMAGE_NAME }}/frontend:latest

      # Push backend Docker image to GitHub Packages
      - name: Push backend Docker image to GitHub Packages
        if: github.event_name != 'pull_request'
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push ghcr.io/${{ env.IMAGE_NAME }}/backend:latest

      # Create GitHub Release
      - name: Create GitHub Release
        if: github.event_name == 'push' && github.ref_type == 'tag'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body: |
            Release of version ${{ github.ref }}.

