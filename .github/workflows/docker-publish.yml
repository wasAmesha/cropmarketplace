name: Docker

on:
  schedule:
    - cron: '27 1 * * *'
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  FRONTEND_IMAGE: ${{ github.repository }}-frontend
  BACKEND_IMAGE: ${{ github.repository }}-backend

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20
        with:
          cosign-release: 'v2.2.4'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push frontend Docker image
        id: build-and-push-frontend
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE }}:latest

      - name: Build and push backend Docker image
        id: build-and-push-backend
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE }}:latest

      - name: Sign the published frontend Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          IMAGE: ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE }}:latest
        run: cosign sign --yes ${IMAGE}

      - name: Sign the published backend Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          IMAGE: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE }}:latest
        run: cosign sign --yes ${IMAGE}

      - name: Test with docker-compose
        run: |
          docker-compose up -d
          # Add any commands to run your tests here
          docker-compose down
